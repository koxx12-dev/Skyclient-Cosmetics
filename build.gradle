
// For those who want the bleeding edge
plugins {
    id 'java'
    id 'net.minecraftforge.gradle.forge' version '6f5327'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'org.spongepowered.mixin' version '0.6-SNAPSHOT'
}
/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = mod_version
group = "io.github.koxx12-dev"
archivesBaseName = "!!"+mod_name

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"

    replace('${GRADLE_MOD_ID}', mod_id)
    replace('${GRADLE_MOD_NAME}', mod_name)
    replace('${GRADLE_MOD_DESCRIPTION}', mod_description)
    replace('${GRADLE_MOD_VERSION}', mod_version)

    clientRunArgs += "--tweakClass org.spongepowered.asm.launch.MixinTweaker"
    clientRunArgs += "--mixin mixins.scc.json"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.

    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url "https://repo.sk1er.club/repository/maven-public/" }
}

dependencies {

    //implementation fileTree(dir: 'libs', include: '*.jar')

    implementation "gg.essential:vigilance-1.8.9-forge:176"
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.github.JnCrMx:discord-game-sdk4j:v0.5.4'

    implementation "org.spongepowered:mixin:0.7.11-SNAPSHOT"
    annotationProcessor "org.spongepowered:mixin:0.7.11-SNAPSHOT"

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

mixin {
    add sourceSets.main, 'mixins.scc.refmap.json'
}

processResources {
    inputs.property "version", mod_version
    inputs.property "mcversion", project.minecraft.version
    inputs.property 'name', mod_name
    inputs.property 'modid', mod_id
    inputs.property 'description', mod_description

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand (
                'version':mod_version,
                'mcversion':project.minecraft.version,
                'name':mod_name,
                'modid': mod_id,
                'description':mod_description
        )

    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}


shadowJar {
    archiveFileName = jar.archiveFileName
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    relocate("com.google.gson", "scc.googlecom.gson")

    exclude(
            "dummyThing",
            "LICENSE.md",
            "pack.mcmeta",
            "**/module-info.class",
            "*.so",
            "*.dylib",
            "*.dll",
            "*.jnilib",
            "ibxm/**",
            "com/jcraft/**",
            "org/lwjgl/**",
            "net/java/**",
            "META-INF/proguard/**",
            "META-INF/maven/**",
            "META-INF/versions/**",
            "META-INF/com.android.tools/**",
            "fabric.mod.json"
    )
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
}

jar {
    manifest {
        attributes "ModSide": "CLIENT",
                "FMLCorePlugin": "io.github.koxx12dev.scc.fml.SkyclientCosmeticsLoadingPlugin",
                "FMLCorePluginContainsFMLMod": "true",
                "ForceLoadAsMod": true,
                "MixinConfigs": "mixins.scc.json",
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": "0"
    }
}

reobfJar.dependsOn tasks.shadowJar
